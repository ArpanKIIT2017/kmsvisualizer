{"version":3,"sources":["visualizations/kmp/components/kmp_settings.js","utils.js","visualizations/kmp/index.js","App.js","serviceWorker.js","index.js"],"names":["KmpSettings","props","Row","Col","md","lg","xs","InputGroup","className","Prepend","Text","id","FormControl","aria-label","aria-describedby","value","inputStr","onChange","e","setInputStr","target","disabled","running","searchStr","setSearchStr","animationDelay","setAnimationDelay","step","max","min","size","Button","onClick","onStart","delay","ms","ctr","rej","p","Promise","resolve","reject","setTimeout","cancel","clearTimeout","Error","rightRotate","A","k","n","length","aux","Array","fill","i","KMP","useState","kInLPSCreate","setkInLPSCreate","iInLpsCreate","setiInLpsCreate","createLPSstatusMessage","setCreateLPSstatusMessage","searchExecutionMessage","setSearchExecutionMessage","toggleRunning","step1running","setStep1running","step2running","setStep2running","finished","setFinished","lps","setLps","maxPrefixLengthInExe","setMaxPrefixLengthInExe","iInExe","setIinExe","occurrences","setOccurences","paddedPattern","setPaddedPattern","lpsLookupIndex","setLpsLookupIndex","hoveredRange","setHoveredRange","setPaused","useEffect","padLen","padded","from","concat","map","val","undefined","getHighlightColor","shouldHighlight","createLpsOnSearchString","a","s","result","executeSearch","prefix","maxPrefixLength","text","occ","idx","occIndex","push","getBgColorPattI","getBorderLPSI","getBorderIndex","alert","Container","fluid","Table","striped","bordered","hover","responsive","ch","key","style","borderWidth","borderColor","backgroundColor","display","colSpan","onMouseEnter","startHighlightResult","onMouseLeave","toString","ob","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2XAOe,SAASA,EAAYC,GAShC,OACQ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACnB,kBAACC,EAAA,EAAD,CAAYC,UAAU,QAClB,kBAACD,EAAA,EAAWE,QAAZ,KACI,kBAACF,EAAA,EAAWG,KAAZ,CAAiBC,GAAG,6BAApB,iBAGJ,kBAACC,EAAA,EAAD,CACIC,aAAW,UACXC,mBAAiB,4BACjBC,MAAOd,EAAMe,SACbC,SAAU,SAACC,GAAD,OAAOjB,EAAMkB,YAAYD,EAAEE,OAAOL,QAC5CM,SAAUpB,EAAMqB,YAI5B,kBAACnB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACnB,kBAACC,EAAA,EAAD,CAAYC,UAAU,QAClB,kBAACD,EAAA,EAAWE,QAAZ,KACI,kBAACF,EAAA,EAAWG,KAAZ,CAAiBC,GAAG,6BAApB,kBAGJ,kBAACC,EAAA,EAAD,CACIC,aAAW,UACXC,mBAAiB,4BACjBC,MAAOd,EAAMsB,UACbN,SAAU,SAACC,GAAD,OAAOjB,EAAMuB,aAAaN,EAAEE,OAAOL,QAC7CM,SAAUpB,EAAMqB,YAI5B,kBAACnB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACnB,kBAACC,EAAA,EAAD,CAAYC,UAAU,QAClB,kBAACD,EAAA,EAAWE,QAAZ,KACI,kBAACF,EAAA,EAAWG,KAAZ,CAAiBC,GAAG,6BAApB,UAEJ,yBAAKH,UAAU,gBACX,kBAAC,IAAD,CACIO,MAAO,IAAOd,EAAMwB,eACpBR,SAAU,SAACC,GAAD,OAAOjB,EAAMyB,kBAAkB,IAAOR,EAAEE,OAAOL,QACzDY,KAAM,IACNC,IAAK,IACLC,IAAK,EACLR,SAAUpB,EAAMqB,QAChBQ,KAAK,UAKrB,kBAAC3B,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC2B,EAAA,EAAD,CAAQC,QAAS/B,EAAMgC,QAASZ,SAAUpB,EAAMqB,SAAhD,YCnEb,SAASY,EAAMC,GAClB,IAAIC,EAAKC,EAAKC,EAAI,IAAIC,SAAQ,SAAUC,EAASC,GAC7CL,EAAMM,WAAWF,EAASL,GAC1BE,EAAMI,KAGV,OADAH,EAAEK,OAAS,WAAYC,aAAaR,GAAMC,EAAIQ,MAAM,eAC7CP,EAGJ,SAASQ,EAAYC,EAAGC,GAO3B,IANA,IAAMC,EAAIF,EAAEG,OAINC,EAAMC,MAAML,EAAEG,QAAQG,KAAK,MAExBC,EAAI,EAAGA,EAAIN,EAAGM,IACnBH,EAAIG,GAAKP,EAAEE,EAAID,EAAIM,GAIvB,IAAK,IAAIA,EAAIL,EAAID,EAAI,EAAGM,GAAK,EAAGA,IAC5BH,EAAIG,EAAIN,GAAKD,EAAEO,GAGnB,OAAOH,ECfI,SAASI,IAAO,IAAD,EAEMC,mBAAS,IAFf,mBAEnBxC,EAFmB,KAETG,EAFS,OAGQqC,mBAAS,IAHjB,mBAGnBjC,EAHmB,KAGRC,EAHQ,OAKcgC,mBAAS,GALvB,mBAKnBC,EALmB,KAKLC,EALK,OAMcF,mBAAS,GANvB,mBAMnBG,EANmB,KAMLC,EANK,OAQkCJ,mBAAS,qBAR3C,mBAQnBK,EARmB,KAQKC,EARL,OASkCN,mBAAS,qBAT3C,mBASnBO,EATmB,KASKC,EATL,OAWOR,oBAAS,GAXhB,mBAWnBlC,EAXmB,KAWV2C,EAXU,OAYcT,oBAAS,GAZvB,mBAYnBU,EAZmB,KAYLC,EAZK,OAacX,oBAAS,GAbvB,mBAanBY,EAbmB,KAaLC,EAbK,OAcMb,oBAAS,GAdf,mBAcnBc,EAdmB,KAcTC,EAdS,OAgBJf,mBAAS,IAhBL,mBAgBnBgB,EAhBmB,KAgBdC,EAhBc,QAkB8BjB,mBAAS,GAlBvC,qBAkBnBkB,GAlBmB,MAkBGC,GAlBH,SAmBEnB,mBAAS,GAnBX,qBAmBnBoB,GAnBmB,MAmBXC,GAnBW,SAqBWrB,mBAAS,IArBpB,qBAqBnBsB,GArBmB,MAqBNC,GArBM,SAuBgBvB,mBAAS,IAvBzB,qBAuBnBwB,GAvBmB,MAuBJC,GAvBI,SAyBkBzB,qBAzBlB,qBAyBnB0B,GAzBmB,MAyBHC,GAzBG,SA4BkB3B,mBAAS,KA5B3B,qBA4BnB/B,GA5BmB,MA4BHC,GA5BG,SA8Bc8B,mBAAS,IA9BvB,qBA8BnB4B,GA9BmB,MA8BLC,GA9BK,SAgCE7B,oBAAS,GAhCX,qBAgCX8B,IAhCW,aAmC1BC,qBAAU,WACN,IAAMC,EAAUxE,EAASkC,OAAS3B,EAAU2B,OAAU,EAAI,EAAKlC,EAASkC,OAAS3B,EAAU2B,OACrFuC,EAASrC,MAAMsC,KAAKnE,GAAWoE,OAAOvC,MAAMoC,GAAQnC,KAAK,KAAKuC,KAAI,SAACC,EAAKvC,GAAQ,MAAO,CAACuC,IAAKA,EAAKvC,EAAGA,MAC3G2B,GAAiBQ,GACjBlB,GAAY,GAEZQ,GAAc,MAEf,CAAExD,EAAWP,IAEhBuE,qBAAU,WAENJ,QAAkBW,GAClBnB,GAAwB,GACxBE,GAAU,GACVS,IAAU,GAIV,IAAME,EAAUxE,EAASkC,OAAS3B,EAAU2B,OAAU,EAAI,EAAKlC,EAASkC,OAAS3B,EAAU2B,OACrFuC,EAASrC,MAAMsC,KAAKnE,GAAWoE,OAAOvC,MAAMoC,GAAQnC,KAAK,KAAKuC,KAAI,SAACC,EAAKvC,GAAQ,MAAO,CAACuC,IAAKA,EAAKvC,EAAGA,MAC3G2B,GAAiBQ,KAElB,CAACnE,IAEJ,IAuBMyE,GAAoB,SAACzC,GACvB,OAAIgB,GARgB,SAAChB,GACrB,OAA2B,GAAvB8B,GAAalC,SACLI,GAAK8B,GAAa,IAAM9B,GAAK8B,GAAa,IAMtCY,CAAgB1C,GACrB,UAGHc,GAAiBd,IAAMsB,GAAW,aAAe,SAGvDqB,GAAuB,uCAAG,kCAAAC,EAAA,sDAE5BpC,EAA0B,aAGpBqC,EAAI5E,GADJ6E,EAAS,IAGR,GAAK,EACRpD,EAAI,EAAGU,EAAgB,GAElBJ,EAAI,EAVe,YAUZA,EAAI6C,EAAEjD,QAVM,iBAWxBU,EAAgBN,GAXQ,YAcjBN,EAAI,GAAKmD,EAAE7C,KAAO6C,EAAEnD,IAdH,wBAepBc,EAA0B,8DAAD,OAA+DsC,EAAOpD,EAAI,KACnGA,EAAIoD,EAAOpD,EAAI,GACfU,EAAgBV,EAAE,GAjBE,UAmBdd,EAAMT,GAAiB,KAnBT,sCAsBpB0E,EAAEnD,KAAOmD,EAAE7C,KACXQ,EAA0B,oCAC1Bd,IACAU,EAAgBV,EAAE,IAItBoD,EAAO9C,GAAKN,EACZyB,EAAO,GAAD,OAAK2B,IA9Ba,UAgClBlE,EAAMT,IAhCY,QAUE6B,IAVF,gDAmCrB8C,GAnCqB,4CAAH,qDAsCvBC,GAAa,uCAAG,0CAAAH,EAAA,6DAClB/B,GAAgB,GADE,SAEG8B,KAFH,OAEZK,EAFY,OAGlBnC,GAAgB,GAEhBE,GAAgB,GAEZkC,EAAkB,EAEhBJ,EAAI5E,EACJiF,EAAOxF,EACPyF,EAAM,GAEHnD,EAAI,EAbK,aAaFA,EAAIkD,EAAKtD,QAbP,oBAcdiC,QAAkBW,GAClBjB,GAAUvB,EAAE,GACZqB,GAAwB4B,GACxBtB,GAAiBnC,EAAYkC,GAAe1B,EAAIiD,MAI3CC,EAAKtD,OAASI,EAAM6C,EAAEjD,OAASqD,GArBtB,wBAsBVlC,GAAgB,GAtBN,mBAuBF,GAvBE,aA0BPkC,EAAkB,GAAKC,EAAKlD,KAAO6C,EAAEI,IA1B9B,wBA6BVvC,EAA0B,oDAAD,OAAqDuC,EAAkB,EAAvE,gBAAgFD,EAAOC,EAAkB,KAClIpB,GAAkBoB,EAAgB,GAElCA,EAAkBD,EAAOC,EAAkB,GAhCjC,UAkCJrE,EAAO,GAAYT,IAlCf,uCAwCV0E,EAAEI,KAAqBC,EAAKlD,IAC5BU,EAA0B,+CAC1BuC,KAGAvC,EAA0B,cAM1BuC,IAAoBJ,EAAEjD,SAElBwD,EAAMpD,EAAI6C,EAAEjD,OAAS,EAGzBc,EAA0B,uFAC1BmB,GAAkBoB,EAAkB,GAGpCA,EAAkBD,EAAOC,EAAkB,GAIrCI,EAAW,CAACD,EAAMA,EAAMP,EAAEjD,OAAS,GACzCuD,EAAIG,KAAKD,GAET5B,GAAc,GAAD,OAAK0B,KAnER,UAyERvE,EAAMT,IAzEE,QAae6B,IAbf,+BA2ElBe,GAAgB,GA3EE,mBA4EV,GA5EU,4CAAH,qDA+EbwC,GAAkB,SAACvD,GAErB,OAAKY,EAIDZ,IAAMG,EAAe,EACd,YAGPH,IAAMG,EACC,aAGPH,IAAMK,EACC,cADX,EAXW,SAiBTmD,GAAgB,SAACxD,GACnB,OAAIc,GACIc,KAAmB5B,EACZ,MAIVY,GAIDZ,IAAMK,EACC,cALX,GAWEoD,GAAiB,SAACzD,GACpB,GAAKY,EAIL,OAAIZ,IAAMG,EACC,kBADX,GAKExB,GAAO,uCAAG,sBAAAiE,EAAA,yDACNlF,GAAYO,GAAcP,EAASkC,QAAU3B,EAAU2B,OADjD,uBAER8D,MAAM,oBAFE,iCAMZzC,GAAY,GACZN,GAAc,GAPF,SAQNoC,KARM,OASZpC,GAAc,GACdM,GAAY,GAVA,2CAAH,qDAkBb,OAEI,kBAAC0C,EAAA,EAAD,CAAWzG,UAAU,kBAAkB0G,OAAO,GAC1C,4DAEA,6BACA,kBAAClH,EAAD,CACIgB,SAAUA,EACVG,YAAaA,EACbI,UAAWA,EACXC,aAAc,SAACqE,GAAUpB,EAAO,IAAKjD,EAAaqE,IAClDpE,eAAgBA,GAChBC,kBAAmBA,GACnBJ,QAASA,EACTW,QAASA,KAEb,6BAEA,yBAAKzB,UAAU,SACX,sCACA,gEAEA,6BAEI,6BAEK0D,EAAgB,2BAAIL,GAA8B,4BAEvD,8BAGJ,kBAACsD,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACzF,KAAK,MAC1C,+BACA,4BACA,wBAAItB,UAAU,UACV,qCAGI4C,MAAMsC,KAAKnE,GAAWqE,KAAI,SAAC4B,EAAIlE,GAAL,OAE1B,wBAAImE,IAAKnE,EAAGoE,MAAO,CAAEC,YAAczD,GAAkBZ,IAAMG,EAAiB,MAAQ,GAAImE,YAAab,GAAezD,KAChH,8BACKA,QAKjB,4BACI,wBAAI9C,UAAU,UACV,iDAGA4C,MAAMsC,KAAKnE,GAAWqE,KAAI,SAAC4B,EAAIlE,GAAL,OAE1B,wBAAImE,IAAKnE,EAAGoE,MAAO,CAAEG,gBAAiBhB,GAAgBvD,KAClD,8BACKkE,QAMjB,4BACI,wBAAIhH,UAAU,UAAS,6CAEnBgE,EAAIoB,KAAI,SAACC,EAAKvC,GAAN,OACJ,wBAAImE,IAAKnE,EAAIoE,MAAO,CAAEC,YAAczD,GAAiBZ,IAAMK,GAAmBS,GAAiBd,IAAM4B,GAAmB,MAAQ,GAAI0C,YAAad,GAAcxD,KAC1JuC,UASzB,6BACA,yBAAKrF,UAAU,QAAQkH,MAAO,CAAEI,QAAS1D,GAAgBE,EAAW,QAAU,SAC1E,sCACA,4DAEA,6BAEI,6BAEKF,EAAgB,2BAAIL,GAA8B,4BAEvD,6BAEKK,GAAgBE,EACjB,6BACI,kDAAwBQ,GAAY5B,QACpC,kBAACiE,EAAA,EAAD,CAAOE,UAAQ,EAACD,SAAO,EAACG,YAAU,EAACzF,KAAK,MACpC,+BACI,4BACI,wBAAIiG,QAASjD,GAAY5B,QAAzB,gDACmDoB,EAAY,kDAAkC,kCAIzG,+BACI,4BAEIQ,GAAYc,KAAI,SAACe,EAAUrD,GAAX,OACZ,wBACImE,IAAKnE,EACLoE,MAAO,CAAEG,gBAAkBlB,IAAavB,GAAgB,UAAY,IACpE4C,aAAc,kBAzT7B,SAACrB,GAC1BtB,GAAgBsB,GAwT4CsB,CAAqBtB,IACzCuB,aAAc,WArTtD7C,GAAgB,MAsTsBsB,EAASwB,mBAMtB,4BAEb,8BAGJ,kBAAChB,EAAA,EAAD,CAAOE,UAAQ,EAACE,YAAU,EAACH,SAAO,EAACtF,KAAK,MACpC,+BACA,4BAEQsB,MAAMsC,KAAK1E,GAAU4E,KAAI,SAAC4B,EAAIlE,GAAL,OAEzB,wBAAImE,IAAKnE,GACL,8BACKA,QAMjB,4BAEIF,MAAMsC,KAAK1E,GAAU4E,KAAI,SAAC4B,EAAIlE,GAAL,OACzB,wBAAImE,IAAKnE,EAAGoE,MAAO,CAAEG,gBAAiB9B,GAAkBzC,KACpD,8BACKkE,QAKb,4BAEIxC,GAAcY,KAAI,SAACwC,EAAI9E,GAAL,OAClB,wBAAImE,IAAKnE,EAAGoE,MAAO,CAAEG,gBAAkBzD,GAAiBgE,EAAG9E,IAAMoB,GAA0B,SAAW,UAClG,8BACK0D,EAAGvC,cCparBwC,MARf,WACE,OACE,6BACE,kBAAC9E,EAAD,QCIc+E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dd41ade9.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../style.css';\nimport { InputGroup, FormControl, Col, Row, Button } from 'react-bootstrap';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nexport default function KmpSettings(props) {\n    /**\n     * \n     * props.inputStr, props.setInputStr\n     * props.searchStr, props.setSearchStr\n     * props.animationDelay, props.setAnimationDelay\n     * \n     */\n\n    return (\n            <Row>\n                <Col md={4} lg={4} xs={12}>\n                    <InputGroup className=\"sm-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-default\">Input String</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        \n                        <FormControl\n                            aria-label=\"txt-str\"\n                            aria-describedby=\"inputGroup-sizing-default\"\n                            value={props.inputStr}\n                            onChange={(e) => props.setInputStr(e.target.value)}\n                            disabled={props.running}\n                        />\n                    </InputGroup>\n                </Col>\n                <Col md={3} lg={3} xs={12}>\n                    <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-default\">Search String</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        \n                        <FormControl\n                            aria-label=\"txt-str\"\n                            aria-describedby=\"inputGroup-sizing-default\"\n                            value={props.searchStr}\n                            onChange={(e) => props.setSearchStr(e.target.value)}\n                            disabled={props.running}\n                        />\n                    </InputGroup>\n                </Col>\n                <Col md={3} lg={3} xs={12}>\n                    <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-default\">Speed</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <div className=\"range-slider\">\n                            <RangeSlider\n                                value={3000 - props.animationDelay}\n                                onChange={(e) => props.setAnimationDelay(3000 - e.target.value)}\n                                step={100}\n                                max={3000}\n                                min={0}\n                                disabled={props.running} \n                                size=\"sm\"\n                            />             \n                        </div>\n                    </InputGroup>\n                </Col>\n                <Col md={1}>\n                    <Button onClick={props.onStart} disabled={props.running}>Search</Button>\n                </Col>\n                \n            </Row>\n    )\n}\n\n","export function delay(ms){\n    var ctr, rej, p = new Promise(function (resolve, reject) {\n        ctr = setTimeout(resolve, ms);\n        rej = reject;\n    });\n    p.cancel = function(){ clearTimeout(ctr); rej(Error(\"Cancelled\"))};\n    return p;\n}\n\nexport function rightRotate(A, k) {\n    const n = A.length;\n\n    // construct an auxiliary array of size k and\n    // fill it with last k elements of the input array\n    const aux = Array(A.length).fill(null);\n\n    for (let i = 0; i < k; i++) {\n        aux[i] = A[n - k + i];\n    }\n\n    // shift the first 'n-k' elements of the input array to the end\n    for (let i = n - k - 1; i >= 0; i--) {\n        aux[i + k] = A[i];\n    }\n\n    return aux; \n}","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style.css';\nimport { Container, Table } from 'react-bootstrap';\n\nimport KmpSettings from './components/kmp_settings';\nimport { delay, rightRotate } from '../../utils';\n\n\n\nexport default function KMP() {\n\n    const [inputStr, setInputStr] = useState(\"\");\n    const [searchStr, setSearchStr] = useState(\"\");\n\n    const [kInLPSCreate, setkInLPSCreate] = useState(0);\n    const [iInLpsCreate, setiInLpsCreate] = useState(0);\n\n    const [createLPSstatusMessage, setCreateLPSstatusMessage] = useState(\"Not Started Yet !\");\n    const [searchExecutionMessage, setSearchExecutionMessage] = useState(\"Not Started Yet !\");\n\n    const [running, toggleRunning] = useState(false);\n    const [step1running, setStep1running] = useState(false);\n    const [step2running, setStep2running] = useState(false);\n    const [finished, setFinished] = useState(false);\n\n    const [lps, setLps] = useState([]);\n\n    const [maxPrefixLengthInExe, setMaxPrefixLengthInExe] = useState(0);\n    const [iInExe, setIinExe] = useState(0);\n\n    const [occurrences, setOccurences] = useState([]);\n\n    const [paddedPattern, setPaddedPattern] = useState([]);\n\n    const [lpsLookupIndex, setLpsLookupIndex] = useState();\n\n\n    const [animationDelay, setAnimationDelay] = useState(1000);\n\n    const [hoveredRange, setHoveredRange] = useState([]);\n\n    const [paused, setPaused] = useState(false);\n\n\n    useEffect(() => {\n        const padLen = (inputStr.length - searchStr.length) < 0 ? 0 : (inputStr.length - searchStr.length);\n        const padded = Array.from(searchStr).concat(Array(padLen).fill('')).map((val, i) => { return {val: val, i: i} });\n        setPaddedPattern(padded);\n        setFinished(false);\n\n        setOccurences([]);\n\n    }, [ searchStr, inputStr]);\n\n    useEffect(() => {\n        // Cleanup\n        setLpsLookupIndex(undefined);\n        setMaxPrefixLengthInExe(0);\n        setIinExe(0);\n        setPaused(false);\n        //setOccurences([]);\n        \n\n        const padLen = (inputStr.length - searchStr.length) < 0 ? 0 : (inputStr.length - searchStr.length);\n        const padded = Array.from(searchStr).concat(Array(padLen).fill('')).map((val, i) => { return {val: val, i: i} });\n        setPaddedPattern(padded);\n        \n    }, [running]);\n\n    const onPause = () => {\n        console.log(\"Heererere\");\n        console.log(paused);\n        setPaused(!paused);\n        console.log(paused);\n    }\n\n\n    const startHighlightResult = (occIndex) => {\n        setHoveredRange(occIndex);\n    };\n\n    const cleanHighlightResult = () => {\n        setHoveredRange([]);\n    };\n\n    const shouldHighlight = (i) => {\n        if (hoveredRange.length == 2)\n            return (i >= hoveredRange[0] && i <= hoveredRange[1]);\n\n        return false;\n    };\n\n    const getHighlightColor = (i) => {\n        if (finished && shouldHighlight(i)) {\n            return '#b3ccaf';\n        }\n\n        return (step2running && (i === iInExe)) ? 'lightgreen' : 'white';\n    };\n    \n    const createLpsOnSearchString = async () => {\n        \n        setCreateLPSstatusMessage(\"Stared...\");\n\n        const result = [];\n        const s = searchStr;\n\n        result[0] = 0; \n        let k = 0; setkInLPSCreate(0);\n\n        for (let i = 1; i < s.length; i++) {\n            setiInLpsCreate(i);\n\n\n            while (k > 0 && s[i] !== s[k]) {\n                setCreateLPSstatusMessage(`Mismatch! Consulting LPS table....Updating LPS [ Index ] = ${result[k - 1]}`);\n                k = result[k - 1];\n                setkInLPSCreate(k+0);\n\n                await delay(animationDelay / 100);\n            }\n\n            if (s[k] === s[i]) { // we've found the longest prefix - case 1\n                setCreateLPSstatusMessage(\"Matched! Incrementing Left Value\")\n                k++;\n                setkInLPSCreate(k+0);\n                \n            }\n\n            result[i] = k; // store this result in the array\n            setLps([...result]);\n\n            await delay(animationDelay);\n        }\n        \n        return result;\n    };\n\n    const executeSearch = async () => {\n        setStep1running(true);\n        const prefix = await createLpsOnSearchString();\n        setStep1running(false);\n\n        setStep2running(true);\n\n        let maxPrefixLength = 0;\n\n        const s = searchStr;\n        const text = inputStr;\n        const occ = [];\n        \n        for (let i = 0; i < text.length; i++) {\n            setLpsLookupIndex(undefined);\n            setIinExe(i+0);\n            setMaxPrefixLengthInExe(maxPrefixLength);\n            setPaddedPattern(rightRotate(paddedPattern, i - maxPrefixLength));\n\n            //(maxPrefixLength > 0) ? setMaxPrefixLengthInExe(maxPrefixLength+0) : setMaxPrefixLengthInExe(1);\n\n            if ((text.length - i) < (s.length - maxPrefixLength)) {\n                setStep2running(false);\n                return -1;\n            }\n\n            while (maxPrefixLength > 0 && text[i] !== s[maxPrefixLength]) {\n                \n\n                setSearchExecutionMessage(`Mismatch! Hopping, Matched Prefix Length = LPS [ ${maxPrefixLength - 1} ] = ${prefix[maxPrefixLength - 1]}`);\n                setLpsLookupIndex(maxPrefixLength-1);\n\n                maxPrefixLength = prefix[maxPrefixLength - 1];\n                \n                await delay((7.0 / 10) * animationDelay);\n                //setLpsLookupIndex(undefined);\n            }\n\n            // If a match happened, increase the length of the maximum-length\n            // prefix.\n            if (s[maxPrefixLength] === text[i]) {\n                setSearchExecutionMessage(`Matched! incrementing Maximum Prefix Length`);\n                maxPrefixLength++;\n            } else {\n                //shiftPaddedArray(i, i+1);\n                setSearchExecutionMessage(`Mismatch! `);\n            }\n\n            // If the prefix length is the same length as the pattern string, it\n            // means that we have found a matching substring in the text.\n\n            if (maxPrefixLength === s.length) {\n                // We can return this value or perform this operation.\n                let idx = i - s.length + 1;\n                \n                // Get the previous maximum-length prefix and continue search.\n                setSearchExecutionMessage(`Pattern Matched! Get Previous Max-Length Prefix and look for further occurrences...`);\n                setLpsLookupIndex(maxPrefixLength - 1);\n\n\n                maxPrefixLength = prefix[maxPrefixLength - 1];\n                //shiftPaddedArray(maxPrefixLength, i);\n                //await delay((7.0 / 10) * animationDelay);\n\n                const occIndex = [idx, (idx + s.length - 1)];\n                occ.push(occIndex);\n\n                setOccurences([...occ])\n\n\n\n            } \n\n            await delay(animationDelay);\n        }\n        setStep2running(false);\n        return -1;\n    };\n\n    const getBgColorPattI = (i) => {\n\n        if (!step1running) {\n            return 'white';\n        }\n\n        if (i === kInLPSCreate - 1) {\n            return 'lightblue';\n        }\n\n        if (i === kInLPSCreate) {\n            return 'lightgreen';\n        } \n\n        if (i === iInLpsCreate) {\n            return 'yellow';\n        }\n        \n    };\n\n    const getBorderLPSI = (i) => {\n        if (step2running) {\n            if (lpsLookupIndex === i) {\n                return 'red';\n            }\n        }\n\n        if (!step1running) {\n            return;\n        }\n\n        if (i === iInLpsCreate) {\n            return 'yellow';\n        }\n\n        //return 'yellow';\n    }\n\n    const getBorderIndex = (i) => {\n        if (!step1running) {\n            return;\n        }\n\n        if (i === kInLPSCreate) {\n            return 'lightgreen';\n        }\n    }\n\n    const onStart = async () => {\n        if (!(inputStr && searchStr && (inputStr.length >= searchStr.length))) {\n            alert('Input Not Valid!')\n            return;\n        }\n\n        setFinished(false);\n        toggleRunning(true);\n        await executeSearch();\n        toggleRunning(false);\n        setFinished(true);\n        \n        \n        \n    };\n\n\n\n    return (\n        \n        <Container className=\"parentContainer\" fluid={true}>\n            <h2>Knuth-Morris-Pratt Algorithm</h2>\n            \n            <hr />\n            <KmpSettings \n                inputStr={inputStr} \n                setInputStr={setInputStr} \n                searchStr={searchStr} \n                setSearchStr={(val) => { setLps([]); setSearchStr(val); }} \n                animationDelay={animationDelay}\n                setAnimationDelay={setAnimationDelay}\n                running={running} \n                onStart={onStart}\n            />\n            <br />\n            \n            <div className=\"step1\">\n                <h4>Step 1</h4>\n                <span>Creation of the LPS / PI table</span>\n                \n                <div>\n                    \n                    <br />\n                    {\n                        (step1running) ? <b>{createLPSstatusMessage}</b> : <b></b>\n                    }\n                    <br />\n                </div>\n                \n                <Table striped bordered hover responsive size=\"sm\">\n                    <tbody>\n                    <tr>\n                    <td className=\"laling\">\n                        <b>Index</b>\n                    </td>\n                        {\n                            Array.from(searchStr).map((ch, i) => \n                            \n                            <td key={i} style={{ borderWidth: (step1running  && (i === kInLPSCreate)) ? '2px' : '', borderColor: getBorderIndex(i) }}>\n                                <span>\n                                    {i}\n                                </span>\n                            </td>)\n                        }\n                    </tr>\n                    <tr>\n                        <td className=\"laling\">\n                            <b>Pattern [ Index ]</b>\n                        </td>\n                        {\n                            Array.from(searchStr).map((ch, i) => \n                            \n                            <td key={i} style={{ backgroundColor: getBgColorPattI(i) }}>\n                                <span>\n                                    {ch}\n                                </span>\n                            </td>\n                            )\n                        }\n                    </tr>\n                    <tr>\n                        <td className=\"laling\"><b>LPS [ Index ]</b></td>\n                        {\n                            lps.map((val, i) => \n                                <td key={i}  style={{ borderWidth: (step1running && (i === iInLpsCreate)) || (step2running && (i === lpsLookupIndex)) ? '2px' : '', borderColor: getBorderLPSI(i) }}>\n                                    {val}\n                                </td>\n                            )\n                        }\n                    </tr>\n                    </tbody>\n                </Table>\n            </div>\n\n            <br />\n            <div className=\"step2\" style={{ display: step2running || finished ? 'block' : 'none' }}> \n                <h4>Step 2</h4>\n                <span>Search in the input string</span>\n\n                <div>\n                   \n                    <br />\n                    {\n                        (step2running) ? <b>{searchExecutionMessage}</b> : <b></b>\n                    }\n                    <br />\n                    {\n                        (step2running || finished) ? \n                        <div>\n                            <b>Num of Occurrences: {occurrences.length}</b>\n                            <Table bordered striped responsive size=\"sm\">\n                                <thead>\n                                    <tr>\n                                        <th colSpan={occurrences.length}>\n                                            Occurrences of Search String in Input String {(finished) ? <span>&nbsp; (Hover Now)</span> : <span></span>}\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                    {\n                                        occurrences.map((occIndex, i) => \n                                            <td \n                                                key={i}\n                                                style={{ backgroundColor: (occIndex === hoveredRange) ? '#daebd8' : '' }}\n                                                onMouseEnter={() => startHighlightResult(occIndex)} \n                                                onMouseLeave={() => cleanHighlightResult()}\n                                            >{occIndex.toString()}</td>\n                                        )\n                                    }\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        </div> : <b></b>\n                    }\n                    <br />\n                </div>\n\n                <Table bordered responsive striped size=\"sm\">\n                    <tbody>\n                    <tr>\n                        {\n                            Array.from(inputStr).map((ch, i) => \n                            \n                            <td key={i}>\n                                <span>\n                                    {i}\n                                </span>\n                            </td>\n                            )\n                        }\n                    </tr>\n                    <tr>\n                    {\n                        Array.from(inputStr).map((ch, i) =>\n                        <td key={i} style={{ backgroundColor: getHighlightColor(i)}}>\n                            <span>\n                                {ch}\n                            </span>\n                        </td>)\n                    }\n                    </tr>\n                    <tr>\n                    {\n                        paddedPattern.map((ob, i) => \n                        <td key={i} style={{ backgroundColor: (step2running && (ob.i === maxPrefixLengthInExe) ) ? 'yellow' : 'white'}}>\n                            <span>\n                                {ob.val}\n                            </span>\n                        </td>)\n                    }\n                    </tr>\n                    </tbody>\n                </Table>\n            </div>\n            \n        </Container>\n        \n    );\n}","import React from 'react';\nimport './App.css';\nimport KMP from './visualizations/kmp';\n\n\nfunction App() {\n  return (\n    <div>\n      <KMP />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}